{"version":3,"file":"static/js/7344.502095df.chunk.js","mappings":"gGAcG,SAAUA,GACX,aAWA,SAASC,EAAeC,EAAIC,GAC1B,SAASC,IACHF,EAAGG,QAAQC,QAAQC,cACrBC,EAAcN,EAAIC,GACdD,EAAGG,QAAQI,gBAAkBP,EAAGG,QAAQC,QAAQI,cAClDR,EAAGS,WAELR,EAAMS,QAAUC,WAAWT,EAAOD,EAAMW,OAG5CX,EAAMS,QAAUC,WAAWT,EAAOD,EAAMW,OACxCX,EAAMY,MAAQ,WACZC,aAAab,EAAMS,SACnBT,EAAMS,QAAUC,WAAWT,EAAO,KAEpCJ,EAAWiB,GAAGC,OAAQ,UAAWf,EAAMY,OACvCf,EAAWiB,GAAGC,OAAQ,QAASf,EAAMY,OAGvC,SAASP,EAAcW,EAAKhB,GAC1Ba,aAAab,EAAMS,SACnBZ,EAAWoB,IAAIF,OAAQ,UAAWf,EAAMY,OACxCf,EAAWoB,IAAIF,OAAQ,QAASf,EAAMY,OA/BxCf,EAAWqB,aAAa,eAAe,GAAO,SAAUnB,EAAIoB,GACtDpB,EAAGC,MAAMoB,cACXf,EAAcN,EAAIA,EAAGC,MAAMoB,aAC3BrB,EAAGC,MAAMoB,YAAc,MAErBD,IAAQA,EAAIE,OAA4C,GAAnCtB,EAAGG,QAAQC,QAAQC,eAC1CN,EAAeC,EAAKA,EAAGC,MAAMoB,YAAc,CAAET,MAAOQ,EAAIR,OAAS,SAVrEW,CAAIC,EAAQ","sources":["Questions/QuestionList/autorefresh.ext.js"],"sourcesContent":["/**\r\n * extends codemirror/addon/display/autorefresh\r\n *\r\n * @author Yuki Takei <yuki@weseek.co.jp>\r\n * @see https://codemirror.net/addon/display/autorefresh.js\r\n * @see https://github.com/scniro/react-codemirror2/issues/83#issuecomment-398825212\r\n */\r\n/* eslint-disable */\r\n\r\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: http://codemirror.net/LICENSE\r\n\r\n(function (mod) {\r\n  mod(require(\"codemirror\"));\r\n})(function (CodeMirror) {\r\n  \"use strict\";\r\n\r\n  CodeMirror.defineOption(\"autoRefresh\", false, function (cm, val) {\r\n    if (cm.state.autoRefresh) {\r\n      stopListening(cm, cm.state.autoRefresh);\r\n      cm.state.autoRefresh = null;\r\n    }\r\n    if (val && (val.force || cm.display.wrapper.offsetHeight == 0))\r\n      startListening(cm, (cm.state.autoRefresh = { delay: val.delay || 250 }));\r\n  });\r\n\r\n  function startListening(cm, state) {\r\n    function check() {\r\n      if (cm.display.wrapper.offsetHeight) {\r\n        stopListening(cm, state);\r\n        if (cm.display.lastWrapHeight != cm.display.wrapper.clientHeight)\r\n          cm.refresh();\r\n      } else {\r\n        state.timeout = setTimeout(check, state.delay);\r\n      }\r\n    }\r\n    state.timeout = setTimeout(check, state.delay);\r\n    state.hurry = function () {\r\n      clearTimeout(state.timeout);\r\n      state.timeout = setTimeout(check, 50);\r\n    };\r\n    CodeMirror.on(window, \"mouseup\", state.hurry);\r\n    CodeMirror.on(window, \"keyup\", state.hurry);\r\n  }\r\n\r\n  function stopListening(_cm, state) {\r\n    clearTimeout(state.timeout);\r\n    CodeMirror.off(window, \"mouseup\", state.hurry);\r\n    CodeMirror.off(window, \"keyup\", state.hurry);\r\n  }\r\n});\r\n"],"names":["CodeMirror","startListening","cm","state","check","display","wrapper","offsetHeight","stopListening","lastWrapHeight","clientHeight","refresh","timeout","setTimeout","delay","hurry","clearTimeout","on","window","_cm","off","defineOption","val","autoRefresh","force","mod","require"],"sourceRoot":""}