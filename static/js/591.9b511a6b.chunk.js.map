{"version":3,"file":"static/js/591.9b511a6b.chunk.js","mappings":"qRAWe,SAASA,EAAOC,GAC7B,IAAQC,EAA2CD,EAA3CC,SAAUC,EAAiCF,EAAjCE,YAAaC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SACtC,GAA4BC,EAAAA,EAAAA,YAA5B,eACA,GADA,WACwBA,EAAAA,EAAAA,WAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OACE,iBAAKC,UAAS,2BAAsBF,EAAO,GAAK,aAAhD,WACE,iBAAKE,UAAU,eAAf,UACGN,GACD,mBACEO,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMH,GAAQ,SAACI,GAAD,OAAeA,MAHxC,UAKE,SAAC,IAAD,CAAiBC,KAAMN,EAAOO,EAAAA,IAAgBC,EAAAA,YAGlD,SAAC,KAAD,CACEC,eApBN,SAAsBC,EAAQC,EAAMd,GAClCC,EAASD,GACTe,OAAOC,WAAa,SAAUC,GAC5BF,OAAOG,QAAQC,IAAI,KAkBjBnB,MAAOA,EACPK,UAAU,sBACVe,QAAS,CACPC,cAAc,EACdC,YAAa,CAAEC,OAAO,GACtBC,MAAM,EACNC,KAAM3B,EACN4B,MAAO,WACPC,aAAa,U,4FCSvB,UAlDA,WACE,OAAwBC,EAAAA,EAAAA,SAAgB,OAAQ,IAAhD,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAsBF,EAAAA,EAAAA,SAAgB,MAAO,IAA7C,eAAOG,EAAP,KAAYC,EAAZ,KACA,GAAoBJ,EAAAA,EAAAA,SAAgB,KAAM,IAA1C,eAAOK,EAAP,KAAWC,EAAX,KACA,GAA4BhC,EAAAA,EAAAA,UAAS,IAArC,eAAOiC,EAAP,KAAeC,EAAf,KACA,GAAqCC,EAAAA,EAAAA,iBAArC,eAAkBC,GAAlB,WAcA,OAZAC,EAAAA,EAAAA,YAAU,WACRD,GAAgB,WACdF,EAAU,qCAAD,OAEGP,EAFH,qCAGIE,EAHJ,uCAIKE,EAJL,6CAQV,CAACJ,EAAME,EAAKE,KAGb,iCACE,iBAAK5B,UAAU,gBAAf,WACE,SAAC,UAAD,CACEP,SAAS,MACTC,YAAY,OACZC,MAAO6B,EACPW,QAASV,KAEX,SAAC,UAAD,CAAQhC,SAAS,MAAMC,YAAY,MAAMC,MAAO+B,EAAKS,QAASR,KAC9D,SAAC,UAAD,CACElC,SAAS,aACTC,YAAY,KACZC,MAAOiC,EACPO,QAASN,QAGb,gBAAK7B,UAAU,OAAf,UACE,mBACE8B,OAAQA,EACRM,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,gB,sBCjCd,SAAUC,GACX,aAWA,SAASC,EAAeC,EAAIC,GAC1B,SAASC,IACHF,EAAGG,QAAQC,QAAQC,cACrBC,EAAcN,EAAIC,GACdD,EAAGG,QAAQI,gBAAkBP,EAAGG,QAAQC,QAAQI,cAClDR,EAAGS,WAELR,EAAMS,QAAUC,WAAWT,EAAOD,EAAMW,OAG5CX,EAAMS,QAAUC,WAAWT,EAAOD,EAAMW,OACxCX,EAAMY,MAAQ,WACZC,aAAab,EAAMS,SACnBT,EAAMS,QAAUC,WAAWT,EAAO,KAEpCJ,EAAWiB,GAAGhD,OAAQ,UAAWkC,EAAMY,OACvCf,EAAWiB,GAAGhD,OAAQ,QAASkC,EAAMY,OAGvC,SAASP,EAAcU,EAAKf,GAC1Ba,aAAab,EAAMS,SACnBZ,EAAWmB,IAAIlD,OAAQ,UAAWkC,EAAMY,OACxCf,EAAWmB,IAAIlD,OAAQ,QAASkC,EAAMY,OA/BxCf,EAAWoB,aAAa,eAAe,GAAO,SAAUlB,EAAImB,GACtDnB,EAAGC,MAAM3B,cACXgC,EAAcN,EAAIA,EAAGC,MAAM3B,aAC3B0B,EAAGC,MAAM3B,YAAc,MAErB6C,IAAQA,EAAI5C,OAA4C,GAAnCyB,EAAGG,QAAQC,QAAQC,eAC1CN,EAAeC,EAAKA,EAAGC,MAAM3B,YAAc,CAAEsC,MAAOO,EAAIP,OAAS,SAVrEQ,CAAIC,EAAQ,Q,sGCTC,SAASzC,EAAgB0C,EAAKC,GAC3C,IAAMC,EAHO,iBAGgBF,EAE7B,GAA0BpE,EAAAA,EAAAA,WAAS,WACjC,IAAMuE,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACFA,IAEAA,KAPX,eAAOvE,EAAP,KAAc8E,EAAd,KAeA,OAJAvC,EAAAA,EAAAA,YAAU,WACRmC,aAAaK,QAAQP,EAAaI,KAAKI,UAAUhF,MAChD,CAACwE,EAAaxE,IAEV,CAACA,EAAO8E","sources":["Questions/QuestionList/Editor.js","Questions/QuestionList/EditorApp.js","Questions/QuestionList/autorefresh.ext.js","Questions/QuestionList/useLocalStorage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/mode/xml/xml\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/css/css\";\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\nimport \"./autorefresh.ext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Editor(props) {\n  const { language, displayName, value, onChange } = props;\n  const [editor, setEditor] = useState();\n  const [open, setOpen] = useState(true);\n\n  function handleChange(editor, data, value) {\n    onChange(value);\n    window.onpopstate = function (event) {\n      window.history.go(-1);\n    };\n  }\n\n  return (\n    <div className={`editor-container ${open ? \"\" : \"collapsed\"}`}>\n      <div className=\"editor-title\">\n        {displayName}\n        <button\n          type=\"button\"\n          className=\"expand-collapse-btn\"\n          onClick={() => setOpen((prevOpen) => !prevOpen)}\n        >\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\n        </button>\n      </div>\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          autoRefresh: { force: true },\n          lint: true,\n          mode: language,\n          theme: \"material\",\n          lineNumbers: true,\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useState, useEffect, useTransition } from \"react\";\nimport Editor from \"./Editor\";\nimport useLocalStorage from \"../QuestionList/useLocalStorage.js\";\n\nfunction EditorApp() {\n  const [html, setHtml] = useLocalStorage(\"html\", \"\");\n  const [css, setCss] = useLocalStorage(\"css\", \"\");\n  const [js, setJs] = useLocalStorage(\"js\", \"\");\n  const [srcDoc, setSrcDoc] = useState(\"\");\n  const [isPending, startTransition] = useTransition();\n\n  useEffect(() => {\n    startTransition(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `);\n    });\n  }, [html, css, js]);\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onInput={setHtml}\n        />\n        <Editor language=\"css\" displayName=\"CSS\" value={css} onInput={setCss} />\n        <Editor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onInput={setJs}\n        />\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </>\n  );\n}\n\nexport default EditorApp;\n","/**\n * extends codemirror/addon/display/autorefresh\n *\n * @author Yuki Takei <yuki@weseek.co.jp>\n * @see https://codemirror.net/addon/display/autorefresh.js\n * @see https://github.com/scniro/react-codemirror2/issues/83#issuecomment-398825212\n */\n/* eslint-disable */\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function (mod) {\n  mod(require(\"codemirror\"));\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"autoRefresh\", false, function (cm, val) {\n    if (cm.state.autoRefresh) {\n      stopListening(cm, cm.state.autoRefresh);\n      cm.state.autoRefresh = null;\n    }\n    if (val && (val.force || cm.display.wrapper.offsetHeight == 0))\n      startListening(cm, (cm.state.autoRefresh = { delay: val.delay || 250 }));\n  });\n\n  function startListening(cm, state) {\n    function check() {\n      if (cm.display.wrapper.offsetHeight) {\n        stopListening(cm, state);\n        if (cm.display.lastWrapHeight != cm.display.wrapper.clientHeight)\n          cm.refresh();\n      } else {\n        state.timeout = setTimeout(check, state.delay);\n      }\n    }\n    state.timeout = setTimeout(check, state.delay);\n    state.hurry = function () {\n      clearTimeout(state.timeout);\n      state.timeout = setTimeout(check, 50);\n    };\n    CodeMirror.on(window, \"mouseup\", state.hurry);\n    CodeMirror.on(window, \"keyup\", state.hurry);\n  }\n\n  function stopListening(_cm, state) {\n    clearTimeout(state.timeout);\n    CodeMirror.off(window, \"mouseup\", state.hurry);\n    CodeMirror.off(window, \"keyup\", state.hurry);\n  }\n});\n","import { useEffect, useState } from \"react\";\n\nconst PREFIX = \"codepen-clone-\";\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key;\n\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey);\n    if (jsonValue != null) return JSON.parse(jsonValue);\n\n    if (typeof initialValue === \"function\") {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n  }, [prefixedKey, value]);\n\n  return [value, setValue];\n}\n"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","window","onpopstate","event","history","go","options","lineWrapping","autoRefresh","force","lint","mode","theme","lineNumbers","useLocalStorage","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","useTransition","startTransition","useEffect","onInput","title","sandbox","frameBorder","width","height","CodeMirror","startListening","cm","state","check","display","wrapper","offsetHeight","stopListening","lastWrapHeight","clientHeight","refresh","timeout","setTimeout","delay","hurry","clearTimeout","on","_cm","off","defineOption","val","mod","require","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","setItem","stringify"],"sourceRoot":""}