"use strict";(self.webpackChunkcomputing=self.webpackChunkcomputing||[]).push([[6070],{6070:function(e,t,n){n.r(t),n.d(t,{default:function(){return h}});var i=n(8381),l=n(9342),a=n(9343),r=(0,i.lazy)((function(){return n.e(4115).then(n.bind(n,4115))})),s=(0,i.lazy)((function(){return n.e(2595).then(n.bind(n,2595))})),o=(0,i.lazy)((function(){return Promise.all([n.e(4553),n.e(4384)]).then(n.bind(n,9471))}));function h(){(0,l.Z)("CSS ID Selector");return(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)("div",{id:"container",children:[(0,a.jsx)("div",{id:"left",children:(0,a.jsx)(r,{})}),(0,a.jsxs)("div",{id:"middle",children:[(0,a.jsx)("h1",{children:"What is CSS ID Selector?"}),(0,a.jsxs)("p",{children:["CSS ID Selector is a way to select HTML elements. It is a string of characters that tells the browser which HTML elements to select. CSS ID Selector is used to select a single element by its ID. HTML validator will not accept a CSS ID Selector that has multiple elements.",(0,a.jsx)("h2",{children:"ID Selector"}),(0,a.jsxs)("p",{children:["The ID selector is used to select an element by its ID. The ID selector is written as follows: ",(0,a.jsx)("br",{}),(0,a.jsx)("code",{children:"#element-id"})," there is no space between the # and the ID."]})]}),(0,a.jsx)("h1",{children:"Duplicate ID"}),(0,a.jsx)("p",{children:"The following may work but it is a semantic error of HTML and you shouldn't use the same ID twice. If you test the following code using an HTML validator or some other tester then you will get an error"}),(0,a.jsx)(o,{props:'\n  <!DOCTYPE html>\n  <html lang="en">\n  <head>\n      <meta charset="UTF-8">\n      <meta http-equiv="X-UA-Compatible" content="IE=edge">\n      <meta name="viewport" content="width=device-width, initial-scale=1.0">\n      <title>Document</title>\n      <style>\n          #paragraph { color: red; }\n          </style>\n  </head>\n  <body>\n      <p id="paragraph"> one </p>\n      <p id="paragraph"> two </p>\n  </body>\n  </html>\n    '}),(0,a.jsx)("h1",{children:"Non Duplicate ID"}),(0,a.jsx)("p",{children:"The following will definitely work since it is a valid html. Each element has a unique ID."}),(0,a.jsx)(o,{props:' \n    <!DOCTYPE html>\n  <html lang="en">\n  <head>\n      <meta charset="UTF-8">\n      <meta http-equiv="X-UA-Compatible" content="IE=edge">\n      <meta name="viewport" content="width=device-width, initial-scale=1.0">\n      <title>Document</title>\n      <style>\n          #paragraph { color: red; }\n          #paragraph_2 { color: blue; }\n          </style>\n  </head>\n  <body>\n      <p id="paragraph"> one </p>\n      <p id="paragraph_2"> two </p>\n  </body>\n  </html>\n    '})]}),(0,a.jsx)("div",{id:"right",children:(0,a.jsx)(s,{})})]})})}}}]);
//# sourceMappingURL=6070.94ed4974.chunk.js.map