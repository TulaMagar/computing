{"version":3,"file":"static/js/4331.86301e68.chunk.js","mappings":"oKAgFA,UA1EA,YAAqC,IAAVA,EAAS,EAATA,MACzB,GAAwBC,EAAAA,EAAAA,UAASD,GAAjC,eAAOE,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA4BC,EAAAA,EAAAA,iBAAnBC,GAAT,eACA,GAA4BN,EAAAA,EAAAA,UAAS,OAArC,eAAOO,EAAP,KAAeC,EAAf,KACMC,GAAMC,EAAAA,EAAAA,UAkBZ,OAhBAC,EAAAA,EAAAA,YAAU,WACRT,EAAQH,KACP,CAACA,KAEJY,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAUH,EAAII,QACpBL,EAAUI,EAAQE,cAAcC,SAASC,KAAKC,aAAe,MAC7DC,QAAQC,IAAIP,EAAQE,cAAcC,SAASC,KAAKC,cAChDX,GAAgB,WACdF,EAAUH,QAEX,CAACA,EAAMM,KAMR,+BACE,iBAAKa,UAAU,OAAf,WACE,0BAeE,gBAAK,kBAAgB,QAArB,UACE,SAAC,IAAD,CACEC,MAAOpB,EACPqB,SAAS,OACTC,YAAY,mCACZC,SAAU,SAACC,GAAD,OAASvB,EAAQuB,EAAIC,OAAOL,QACtCM,QAAS,GACTP,UAAU,aACVQ,YAAY,SASlB,gBAAKR,UAAU,eAAf,UACE,mBACEX,IAAKA,EACLN,OAAQA,EACR0B,MAAM,SAENC,YAAY,IACZvB,OAAQA,EACRa,UAAU,gC,wIChEP,SAASW,KACtBC,EAAAA,EAAAA,GAAS,sBAgCT,OACE,+BACE,iBAAKC,GAAG,YAAR,WACE,gBAAKA,GAAG,OAAR,UACE,gBAAIb,UAAU,OAAd,WACE,UAAC,KAAD,CAAMA,UAAU,OAAOc,GAAG,IAA1B,UACG,IADH,WAIA,UAAC,KAAD,CAAMd,UAAU,OAAOc,GAAG,IAA1B,UACG,IADH,WAIA,UAAC,KAAD,CAAMd,UAAU,OAAOc,GAAG,IAA1B,UACG,IADH,gBAMJ,iBAAKD,GAAG,SAAR,WACE,gDACA,wIAIA,2BACE,2BACE,0CADF,gIAKA,2BACE,4CADF,qLAMF,2CACA,SAAC,UAAD,CAAiBlC,MApEN,gHAqEX,6CACA,SAAC,UAAD,CAAiBA,MA9DJ,0HAgEb,oDACA,2GAIA,SAAC,UAAD,CAAiBA,MA7DD,oVA8DhB,2BACE,gCACA,uCACW,iCADX,2EAIA,gCACA,uCACW,iCADX,oFAIA,gCACA,uCACW,iCADX,wEAMF,0BACE,gCADF,qFAMF,gBAAKkC,GAAG,QAAR,UACE,SAAC,UAAD","sources":["Editor/HtmlCssJsEditor.js","programming_languages/html_l/Html_list.js"],"sourcesContent":["import React, { useState, useEffect, useTransition, useRef } from \"react\";\r\n// import CodeMirror from \"@uiw/react-codemirror\";\r\n// import { markdown, markdownLanguage } from \"@codemirror/lang-markdown\";\r\n// import { languages } from \"@codemirror/language-data\";\r\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\r\n\r\nfunction HtmlCssJsEditor({ props }) {\r\n  const [html, setHtml] = useState(props);\r\n  const [srcDoc, setSrcDoc] = useState(\"\");\r\n  const [, startTransition] = useTransition();\r\n  const [height, setHeight] = useState(\"0px\");\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    setHtml(props);\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    const element = ref.current;\r\n    setHeight(element.contentWindow.document.body.scrollHeight + \"px\");\r\n    console.log(element.contentWindow.document.body.scrollHeight);\r\n    startTransition(() => {\r\n      setSrcDoc(html);\r\n    });\r\n  }, [html, height]);\r\n  // const onLoad = () => {\r\n  //   setHeight(ref.contentWindow.document.body.scrollHeight + \"px\");\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pane\">\r\n        <div>\r\n          {/* <CodeMirror\r\n            value={html}\r\n            spellCheck=\"false\"\r\n            aria-label=\"HTML Code Editor\"\r\n            padding={15}\r\n            options={{\r\n              spellCheck: \"false\",\r\n              lineWrapping: true,\r\n            }}\r\n            extensions={[\r\n              markdown({ base: markdownLanguage, codeLanguages: languages }),\r\n            ]}\r\n            onChange={(value) => setHtml(value)}\r\n          /> */}\r\n          <div data-color-mode=\"light\">\r\n            <CodeEditor\r\n              value={html}\r\n              language=\"html\"\r\n              placeholder=\"Please enter html, css, js code.\"\r\n              onChange={(evn) => setHtml(evn.target.value)}\r\n              padding={15}\r\n              className=\"EditorMode\"\r\n              spellCheck={false}\r\n              // style={{\r\n              //   fontFamily:\r\n              //     \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\r\n              //   fontSize: 14,\r\n              // }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"EditorOutput\">\r\n          <iframe\r\n            ref={ref}\r\n            srcDoc={srcDoc}\r\n            title=\"output\"\r\n            // sandbox=\"allow-scripts\"\r\n            frameBorder=\"0\"\r\n            height={height}\r\n            className=\"text-editor-output\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HtmlCssJsEditor;\r\n","import React from \"react\";\r\nimport \"./html_style.css\";\r\nimport UseTitle from \"../../Title.js\";\r\nimport RelatedLinks from \"./html_links/related_links\";\r\n// import Highlight, { defaultProps } from \"prism-react-renderer\";\r\n// import Element from \"../../img/html_images/html_tag.PNG\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HtmlCssJsEditor from \"../../Editor/HtmlCssJsEditor.js\";\r\nexport default function Html_list() {\r\n  UseTitle(\"What is HTML List?\");\r\n\r\n  const HtmlOrderList = `<ol>\r\n  <li>Item 1</li>\r\n  <li>Item 2</li>\r\n  <li>Item 3</li>\r\n  <li>Item 4</li>\r\n  <li>Item 5</li>\r\n</ol>`;\r\n\r\n  const HtmlUnorderList = `<ul>\r\n    <li>Item 1</li>\r\n    <li>Item 2</li>\r\n    <li>Item 3</li>\r\n    <li>Item 4</li>\r\n    <li>Item 5</li>\r\n</ul>`;\r\n\r\n  const HtmlDefinitionList = `<dl>\r\n    <dt>Definition List</dt>\r\n    <dd>A list of terms and their definitions.</dd>\r\n    <dt>Item 1</dt>\r\n    <dd>Definition 1</dd>\r\n    <dt>Item 2</dt>\r\n    <dd>Definition 2</dd>\r\n    <dt>Item 3</dt>\r\n    <dd>Definition 3</dd>\r\n    <dt>Item 4</dt>\r\n    <dd>Definition 4</dd>\r\n    <dt>Item 5</dt>\r\n    <dd>Definition 5</dd>\r\n</dl>`;\r\n  return (\r\n    <>\r\n      <div id=\"container\">\r\n        <div id=\"left\">\r\n          <li className=\"list\">\r\n            <Link className=\"list\" to=\"/\">\r\n              {\" \"}\r\n              Home\r\n            </Link>\r\n            <Link className=\"list\" to=\"/\">\r\n              {\" \"}\r\n              Home\r\n            </Link>\r\n            <Link className=\"list\" to=\"/\">\r\n              {\" \"}\r\n              Home\r\n            </Link>\r\n          </li>\r\n        </div>\r\n        <div id=\"middle\">\r\n          <h1>What is HTML List?</h1>\r\n          <p>\r\n            Html list is used to display the list of items. There are two types\r\n            of list in HTML: ordered and unordered.\r\n          </p>\r\n          <ul>\r\n            <li>\r\n              <b> Ordered list:</b> is used to display the list of items in\r\n              order. List items are numbered from 1 to n. n is the total number\r\n              of list items.\r\n            </li>\r\n            <li>\r\n              <b> Unordered list:</b> is used to display the list of items in\r\n              unordered. List items are not numbered. List items are displayed\r\n              in random order and by default, they are displayed in a bulleted.\r\n            </li>\r\n          </ul>\r\n          <h1>Ordered list:</h1>\r\n          <HtmlCssJsEditor props={HtmlOrderList} />\r\n          <h1>Unordered list:</h1>\r\n          <HtmlCssJsEditor props={HtmlUnorderList} />\r\n\r\n          <h1>HTMl Description List:</h1>\r\n          <p>\r\n            HTML description list is used to display the list of items with a\r\n            description.\r\n          </p>\r\n          <HtmlCssJsEditor props={HtmlDefinitionList} />\r\n          <dl>\r\n            <dt>dl</dt>\r\n            <dd>\r\n              The HTML <code>dl</code> element is used to represent a list of\r\n              terms and their definitions.\r\n            </dd>\r\n            <dt>dd</dt>\r\n            <dd>\r\n              The HTML <code>dd</code> element is used to represent the\r\n              definition of a term in a description list.\r\n            </dd>\r\n            <dt>dt</dt>\r\n            <dd>\r\n              The HTML <code>dt</code> element is used to represent the term of\r\n              the definition list.\r\n            </dd>\r\n          </dl>\r\n\r\n          <p>\r\n            <b>Note</b>: you can use css to style the list items as you want to\r\n            make it look nice.\r\n          </p>\r\n        </div>\r\n\r\n        <div id=\"right\">\r\n          <RelatedLinks />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["props","useState","html","setHtml","srcDoc","setSrcDoc","useTransition","startTransition","height","setHeight","ref","useRef","useEffect","element","current","contentWindow","document","body","scrollHeight","console","log","className","value","language","placeholder","onChange","evn","target","padding","spellCheck","title","frameBorder","Html_list","UseTitle","id","to"],"sourceRoot":""}