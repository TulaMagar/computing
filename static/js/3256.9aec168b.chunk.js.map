{"version":3,"file":"static/js/3256.9aec168b.chunk.js","mappings":"kLA6DA,UAxDA,WACE,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAsBF,EAAAA,EAAAA,UAAS,IAA/B,eAAOG,EAAP,KACA,GADA,MACoBH,EAAAA,EAAAA,UAAS,KAA7B,eAAOI,EAAP,KACA,GADA,MAC4BJ,EAAAA,EAAAA,UAAS,KAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAAqCC,EAAAA,EAAAA,iBAArC,eAAkBC,GAAlB,WAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIV,KACX,CAACA,KAEJQ,EAAAA,EAAAA,YAAU,WACRD,GAAgB,WACdF,EAAU,qCAAD,OAEGL,EAFH,qCAGIE,EAHJ,uCAIKC,EAJL,6CAQV,CAACH,EAAME,EAAKC,KAGb,+BACE,iBAAKQ,UAAU,OAAf,WACE,0BACE,SAAC,KAAD,CACEC,MAAOZ,EACPW,UAAU,aACVE,WAAW,QACXC,QAAS,CACPD,WAAY,SAEdE,WAAY,EACVC,EAAAA,EAAAA,UAAS,CAAEC,KAAMC,EAAAA,iBAAkBC,cAAeC,EAAAA,KAEpDC,SAAU,SAACT,GAAD,OAAWX,EAAQW,SAGjC,gBAAKD,UAAU,eAAf,UACE,mBACEP,OAAQA,EACRkB,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,OACPf,UAAU","sources":["Questions/QuestionList/EditorApp.js"],"sourcesContent":["import React, { useState, useEffect, useTransition } from \"react\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { markdown, markdownLanguage } from \"@codemirror/lang-markdown\";\nimport { languages } from \"@codemirror/language-data\";\n\nfunction EditorApp() {\n  const [html, setHtml] = useState(\"\");\n  const [css, setCss] = useState(\"\");\n  const [js, setJs] = useState(\"\");\n  const [srcDoc, setSrcDoc] = useState(\"\");\n  const [isPending, startTransition] = useTransition();\n\n  useEffect(() => {\n    console.log(html); //gets called whenever get state changes\n  }, [html]);\n\n  useEffect(() => {\n    startTransition(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `);\n    });\n  }, [html, css, js]);\n\n  return (\n    <>\n      <div className=\"pane\">\n        <div>\n          <CodeMirror\n            value={html}\n            className=\"EditorMode\"\n            spellCheck=\"false\"\n            options={{\n              spellCheck: \"false\",\n            }}\n            extensions={[\n              markdown({ base: markdownLanguage, codeLanguages: languages }),\n            ]}\n            onChange={(value) => setHtml(value)}\n          />\n        </div>\n        <div className=\"EditorOutput\">\n          <iframe\n            srcDoc={srcDoc}\n            title=\"output\"\n            sandbox=\"allow-scripts\"\n            frameBorder=\"0\"\n            width=\"100%\"\n            height=\"100%\"\n            className=\"EditorOutput\"\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default EditorApp;\n"],"names":["useState","html","setHtml","css","js","srcDoc","setSrcDoc","useTransition","startTransition","useEffect","console","log","className","value","spellCheck","options","extensions","markdown","base","markdownLanguage","codeLanguages","languages","onChange","title","sandbox","frameBorder","width","height"],"sourceRoot":""}