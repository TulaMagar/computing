{"version":3,"file":"static/js/4384.d993927e.chunk.js","mappings":"+JAgFA,UA1EA,YAAqC,IAAVA,EAAS,EAATA,MACzB,GAAwBC,EAAAA,EAAAA,UAASD,GAAjC,eAAOE,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA4BC,EAAAA,EAAAA,iBAAnBC,GAAT,eACA,GAA4BN,EAAAA,EAAAA,UAAS,OAArC,eAAOO,EAAP,KAAeC,EAAf,KACMC,GAAMC,EAAAA,EAAAA,UAkBZ,OAhBAC,EAAAA,EAAAA,YAAU,WACRT,EAAQH,KACP,CAACA,KAEJY,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAUH,EAAII,QACpBL,EAAUI,EAAQE,cAAcC,SAASC,KAAKC,aAAe,MAC7DC,QAAQC,IAAIP,EAAQE,cAAcC,SAASC,KAAKC,cAChDX,GAAgB,WACdF,EAAUH,QAEX,CAACA,EAAMM,KAMR,+BACE,iBAAKa,UAAU,OAAf,WACE,0BAeE,gBAAK,kBAAgB,QAArB,UACE,SAAC,IAAD,CACEC,MAAOpB,EACPqB,SAAS,OACTC,YAAY,mCACZC,SAAU,SAACC,GAAD,OAASvB,EAAQuB,EAAIC,OAAOL,QACtCM,QAAS,GACTP,UAAU,aACVQ,YAAY,SASlB,gBAAKR,UAAU,eAAf,UACE,mBACEX,IAAKA,EACLN,OAAQA,EACR0B,MAAM,SAENC,YAAY,IACZvB,OAAQA,EACRa,UAAU","sources":["Editor/HtmlCssJsEditor.js"],"sourcesContent":["import React, { useState, useEffect, useTransition, useRef } from \"react\";\r\n// import CodeMirror from \"@uiw/react-codemirror\";\r\n// import { markdown, markdownLanguage } from \"@codemirror/lang-markdown\";\r\n// import { languages } from \"@codemirror/language-data\";\r\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\r\n\r\nfunction HtmlCssJsEditor({ props }) {\r\n  const [html, setHtml] = useState(props);\r\n  const [srcDoc, setSrcDoc] = useState(\"\");\r\n  const [, startTransition] = useTransition();\r\n  const [height, setHeight] = useState(\"0px\");\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    setHtml(props);\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    const element = ref.current;\r\n    setHeight(element.contentWindow.document.body.scrollHeight + \"px\");\r\n    console.log(element.contentWindow.document.body.scrollHeight);\r\n    startTransition(() => {\r\n      setSrcDoc(html);\r\n    });\r\n  }, [html, height]);\r\n  // const onLoad = () => {\r\n  //   setHeight(ref.contentWindow.document.body.scrollHeight + \"px\");\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pane\">\r\n        <div>\r\n          {/* <CodeMirror\r\n            value={html}\r\n            spellCheck=\"false\"\r\n            aria-label=\"HTML Code Editor\"\r\n            padding={15}\r\n            options={{\r\n              spellCheck: \"false\",\r\n              lineWrapping: true,\r\n            }}\r\n            extensions={[\r\n              markdown({ base: markdownLanguage, codeLanguages: languages }),\r\n            ]}\r\n            onChange={(value) => setHtml(value)}\r\n          /> */}\r\n          <div data-color-mode=\"light\">\r\n            <CodeEditor\r\n              value={html}\r\n              language=\"html\"\r\n              placeholder=\"Please enter html, css, js code.\"\r\n              onChange={(evn) => setHtml(evn.target.value)}\r\n              padding={15}\r\n              className=\"EditorMode\"\r\n              spellCheck={false}\r\n              // style={{\r\n              //   fontFamily:\r\n              //     \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\r\n              //   fontSize: 14,\r\n              // }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"EditorOutput\">\r\n          <iframe\r\n            ref={ref}\r\n            srcDoc={srcDoc}\r\n            title=\"output\"\r\n            // sandbox=\"allow-scripts\"\r\n            frameBorder=\"0\"\r\n            height={height}\r\n            className=\"text-editor-output\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HtmlCssJsEditor;\r\n"],"names":["props","useState","html","setHtml","srcDoc","setSrcDoc","useTransition","startTransition","height","setHeight","ref","useRef","useEffect","element","current","contentWindow","document","body","scrollHeight","console","log","className","value","language","placeholder","onChange","evn","target","padding","spellCheck","title","frameBorder"],"sourceRoot":""}